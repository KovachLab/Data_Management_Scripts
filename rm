#!/bin/bash
#How to create a temporary "recycle bin" on Linux to avoid accidentally and irretrievably deleting potentially important files. 
#Stole the majority of this code from https://www.linuxtoday.com/blog/shell-scripts-with-multiple-arguments.html 

#To use, in your scripts whereever you would normally use 'rm', instead use ./rm (using the full absolute path to wherever your copy of the script is, and making sure you've made it executable for yourself [e.g., chmod 764 rm.sh]). You can also set up an alias for yourself with a simple command to more easily call and run the script when you are working interactively. See notes & caveats below.

mkdir -p /mnt/lustre/mel/shared/RecycleBin 2>/dev/null

echo -e "Recycling the following file(s):"

for file in "$@"
do
    echo "$file"
    mv "$file" /mnt/lustre/mel/shared/RecycleBin
done

#"Here's what the script does. The first command, mkdir, creates [the RecycleBin]. The -p argument instructs mkdir to make a second subdirectory within the first one."

#"The redirection, 2>/dev/null, suppresses any error messages generated by mkdir. This is necessary because the second and subsequent times that the script is run, the subdirectories will already exist. Attempting to create an existing directory results in an error message, which is best suppressed in order to avoid confusing the user."

#"The [mv] command, ... moves the file whose name is given as the first script argument. The file is moved to the directory created by the mkdir command on this, or a previous, invocation of the script."

#"You can use this script to non-irrevocably delete a file. For instance, suppose you're tired of the file movies.txt. If you issue the command rm movies.txt, the file is gone forever. Instead, you can issue the command ./rm movies.txt, which moves the unwanted file to your recycle bin. Files in the [RecycleBin] directory are usually permanently deleted after an interval established by the system administrator. Until a file is deleted, you can recover it simply by using mv to move it out of the [RecycleBin] directory."

#"Okay, a few important words and warnings are in order here. First, you won't be able to execute the del script in the simple fashion indicated unless you give yourself execute access to the script and place the script in a directory that's on your execution path. Previous articles in this series include instructions on how to do this. A workaround is to issue the command sh rm, where rm is the path to the rm script."

#"Second, this script won't allow you to recycle files that you delete via a GUI application, such as GNOME's file manager. The script does its work only if you invoke it."

#"Third, bear in mind that files don't remain in /tmp indefinitely; at some point, they will be automatically deleted. Several Linux distributions use the tmpwatch program to delete temporary files older than 10 days."

#"Fourth and finally, the del script doesn't distinguish identically named files originally residing in distinct directories. For example, if you delete /x/z by using del, you will overwrite any saved copy of /y/z. You can overcome this limitation with a little extra code, if you like. However, use [rm] at your own risk."
